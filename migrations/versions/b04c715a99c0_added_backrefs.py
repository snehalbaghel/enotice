"""added backrefs

Revision ID: b04c715a99c0
Revises: 52e614ada366
Create Date: 2019-11-12 23:21:54.420780

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'b04c715a99c0'
down_revision = '52e614ada366'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('eventTag')
    op.add_column('picture', sa.Column('created_at', sa.TIMESTAMP(), nullable=True))
    op.add_column('request', sa.Column('reviewer_id', sa.Integer(), nullable=True))
    op.drop_constraint('request_ibfk_2', 'request', type_='foreignkey')
    op.create_foreign_key(None, 'request', 'user', ['reviewer_id'], ['id'])
    op.drop_column('request', 'remarks')
    op.drop_column('request', 'reviewed_by')
    op.add_column('review', sa.Column('created_at', sa.TIMESTAMP(), nullable=True))
    op.add_column('review', sa.Column('request_id', sa.Integer(), nullable=True))
    op.add_column('review', sa.Column('updated_at', sa.TIMESTAMP(), nullable=True))
    op.drop_constraint('review_ibfk_1', 'review', type_='foreignkey')
    op.create_foreign_key(None, 'review', 'request', ['request_id'], ['id'])
    op.drop_column('review', 'event_id')
    op.add_column('tag', sa.Column('created_at', sa.TIMESTAMP(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tag', 'created_at')
    op.add_column('review', sa.Column('event_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'review', type_='foreignkey')
    op.create_foreign_key('review_ibfk_1', 'review', 'event', ['event_id'], ['id'])
    op.drop_column('review', 'updated_at')
    op.drop_column('review', 'request_id')
    op.drop_column('review', 'created_at')
    op.add_column('request', sa.Column('reviewed_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('request', sa.Column('remarks', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True))
    op.drop_constraint(None, 'request', type_='foreignkey')
    op.create_foreign_key('request_ibfk_2', 'request', 'user', ['reviewed_by'], ['id'])
    op.drop_column('request', 'reviewer_id')
    op.drop_column('picture', 'created_at')
    op.create_table('eventTag',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('event_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('tag_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='eventTag_ibfk_1'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name='eventTag_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('event_tag')
    # ### end Alembic commands ###
